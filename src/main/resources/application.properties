# server
server.port=8070

# Datasource properties
spring.datasource.url=jdbc:postgresql://localhost:5432/zerikdim5
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.username=postgres
spring.datasource.password=123
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.sql.init.mode=never

# Activation Code
activation.link.expiry.in.minutes=10
activation.link.base.path=http://localhost:8070/api/auth/activate?activation_code=%s

#Swagger properties
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.path=/swagger-ui
springdoc.api-docs.path=/api-docs

# JWT
jwt.access.token.secret=U0RGVyQ0MzUzZnNkRyUkXiQlXjxERkhHPE9ZVUslJF4+SkhGR0pUUllVJV4=
jwt.access.token.expiry.adding.amount=2
jwt.access.token.expiry.time.unit=MINUTES
jwt.refresh.token.secret=c2RGJF4lJiVeKERGR05NU0RGR0xFRktHREZMT0pUIylUIyQlXiMkJV9eJCVe
jwt.refresh.token.expiry.adding.amount=10
jwt.refresh.token.expiry.time.unit=DAYS

# OAuth2
spring.security.oauth2.client.registration.github.clientId=
spring.security.oauth2.client.registration.github.clientSecret=
spring.security.oauth2.client.registration.github.scope=user:email, read:user

spring.security.oauth2.client.registration.google.clientId=
spring.security.oauth2.client.registration.google.clientSecret=
spring.security.oauth2.client.registration.google.scope=email, profile

spring.security.oauth2.client.registration.facebook.clientId=
spring.security.oauth2.client.registration.facebook.clientSecret=
spring.security.oauth2.client.registration.facebook.scope=email, public_profile

